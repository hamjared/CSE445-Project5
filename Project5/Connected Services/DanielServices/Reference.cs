//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project5.DanielServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DanielServices.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StockQuote", ReplyAction="http://tempuri.org/IService1/StockQuoteResponse")]
        double StockQuote(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StockQuote", ReplyAction="http://tempuri.org/IService1/StockQuoteResponse")]
        System.Threading.Tasks.Task<double> StockQuoteAsync(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StockEvaluator", ReplyAction="http://tempuri.org/IService1/StockEvaluatorResponse")]
        string StockEvaluator(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StockEvaluator", ReplyAction="http://tempuri.org/IService1/StockEvaluatorResponse")]
        System.Threading.Tasks.Task<string> StockEvaluatorAsync(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Weather5day", ReplyAction="http://tempuri.org/IService1/Weather5dayResponse")]
        string[] Weather5day(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Weather5day", ReplyAction="http://tempuri.org/IService1/Weather5dayResponse")]
        System.Threading.Tasks.Task<string[]> Weather5dayAsync(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NaturalHazards", ReplyAction="http://tempuri.org/IService1/NaturalHazardsResponse")]
        decimal NaturalHazards(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NaturalHazards", ReplyAction="http://tempuri.org/IService1/NaturalHazardsResponse")]
        System.Threading.Tasks.Task<decimal> NaturalHazardsAsync(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMovieScore", ReplyAction="http://tempuri.org/IService1/GetMovieScoreResponse")]
        decimal GetMovieScore(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMovieScore", ReplyAction="http://tempuri.org/IService1/GetMovieScoreResponse")]
        System.Threading.Tasks.Task<decimal> GetMovieScoreAsync(string title);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Project5.DanielServices.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Project5.DanielServices.IService1>, Project5.DanielServices.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double StockQuote(string symbol) {
            return base.Channel.StockQuote(symbol);
        }
        
        public System.Threading.Tasks.Task<double> StockQuoteAsync(string symbol) {
            return base.Channel.StockQuoteAsync(symbol);
        }
        
        public string StockEvaluator(string symbol) {
            return base.Channel.StockEvaluator(symbol);
        }
        
        public System.Threading.Tasks.Task<string> StockEvaluatorAsync(string symbol) {
            return base.Channel.StockEvaluatorAsync(symbol);
        }
        
        public string[] Weather5day(string zipcode) {
            return base.Channel.Weather5day(zipcode);
        }
        
        public System.Threading.Tasks.Task<string[]> Weather5dayAsync(string zipcode) {
            return base.Channel.Weather5dayAsync(zipcode);
        }
        
        public decimal NaturalHazards(decimal latitude, decimal longitude) {
            return base.Channel.NaturalHazards(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<decimal> NaturalHazardsAsync(decimal latitude, decimal longitude) {
            return base.Channel.NaturalHazardsAsync(latitude, longitude);
        }
        
        public decimal GetMovieScore(string title) {
            return base.Channel.GetMovieScore(title);
        }
        
        public System.Threading.Tasks.Task<decimal> GetMovieScoreAsync(string title) {
            return base.Channel.GetMovieScoreAsync(title);
        }
    }
}
